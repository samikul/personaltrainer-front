{"version":3,"sources":["components/Navbar.js","components/Addcustomer.js","components/Editcustomer.js","components/AddTrainingForCustomer.js","components/Customerlist.js","components/Traininglist.js","components/Reservations.js","components/Gridlist.js","components/Coachlist.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","to","Link","title","Item","Addcustomer","props","useState","open","setOpen","firstname","lastname","streetaddress","postcode","city","email","phone","customer","setCustomer","handleClose","addCustomer","inputChanged","event","target","name","value","Button","style","margin","color","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","onChange","label","fullWidth","DialogActions","Editcustomer","updateCustomer","links","IconButton","size","console","log","AddTrainingForCustomer","datetime","setDatetime","setName","date","duration","activity","training","setTraining","addTrainingForCustomer","handleDateChange","fetch","singleCustomer","then","response","json","catch","err","utils","DateFnsUtils","Grid","container","justify","format","KeyboardButtonProps","Customerlist","customers","setCustomers","msg","setMsg","useEffect","getCustomers","data","content","link","method","headers","body","JSON","stringify","_","columns","Header","accessor","Cell","row","original","aria-label","window","confirm","defaultPageSize","filterable","Snackbar","autoHideDuration","message","anchorOriginal","vertical","horizontal","Traininglist","trainings","setTrainings","getTrainings","d","moment","local","BookedTrainings","reservations","setReservations","getReservations","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","GridListi","classes","listItems","setListItems","responseData","error","GridList","cellHeight","GridListTile","key","cols","ListSubheader","component","map","person","src","avatar","alt","GridListTileBar","first_name","last_name","subtitle","Trainer","itemRows","Table","responsive","App","path","Reservations","Coachlist","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5278eccb.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css';\r\nimport * as ReactBootStrap from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" bg=\"light\" variant=\"light\">\r\n        <ReactBootStrap.Navbar.Brand href=\"/Index\">Personal Trainer</ReactBootStrap.Navbar.Brand>\r\n        <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <ReactBootStrap.Nav className=\"mr-auto\">\r\n            <Link to=\"/Customers\">\r\n              <ReactBootStrap.Nav.Link href=\"/Customers\">Customerlist</ReactBootStrap.Nav.Link>\r\n            </Link>\r\n            <Link to=\"/Trainings\">\r\n              <ReactBootStrap.Nav.Link href=\"Trainings\">Traininglist</ReactBootStrap.Nav.Link>\r\n            </Link>\r\n            <Link to=\"/Reservations\">\r\n              <ReactBootStrap.Nav.Link href=\"Reservations\">Customers with trainings</ReactBootStrap.Nav.Link>\r\n            </Link>\r\n            <ReactBootStrap.NavDropdown title=\"Personal trainers\" id=\"collasible-nav-dropdown\">\r\n              <Link to=\"/Coachlist\">\r\n                <ReactBootStrap.NavDropdown.Item href=\"/Coacheslist/3.1\">List</ReactBootStrap.NavDropdown.Item>\r\n              </Link>\r\n              <Link to=\"/Coachgrid\">\r\n                <ReactBootStrap.NavDropdown.Item href=\"/Coachesgrid/3.2\">Grid</ReactBootStrap.NavDropdown.Item>\r\n              </Link>\r\n            </ReactBootStrap.NavDropdown>\r\n          </ReactBootStrap.Nav>\r\n{/*           <ReactBootStrap.Nav>\r\n            <Link to=\"/Coachlist\">\r\n              <ReactBootStrap.Nav.Link href=\"/Coacheslist\">Personal trainer list</ReactBootStrap.Nav.Link>\r\n            </Link>\r\n            <Link to=\"/Coachgrid\">\r\n              <ReactBootStrap.Nav.Link eventKey={2} href=\"/Coachesgrid\">Personal trainer grid</ReactBootStrap.Nav.Link>\r\n            </Link>\r\n          </ReactBootStrap.Nav> */}\r\n        </ReactBootStrap.Navbar.Collapse>\r\n      </ReactBootStrap.Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default function Addcustomer(props) {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [customer, setCustomer] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        streetaddress: '',\r\n        postcode: '',\r\n        city: '',\r\n        email: '',\r\n        phone: '',\r\n    })\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.addCustomer(customer)\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setCustomer({ ...customer, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button style={{ margin: 10 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Add customer\r\n            </Button>\r\n            <Dialog open={open} disableBackdropClick={true} disableEscapeKeyDown={true} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New customer</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"firstname\"\r\n                        name=\"firstname\"\r\n                        value={customer.firstname}\r\n                        onChange={inputChanged}\r\n                        label=\"firstname\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"lastname\"\r\n                        name=\"lastname\"\r\n                        value={customer.lastname}\r\n                        onChange={inputChanged}\r\n                        label=\"lastname\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"streetaddress\"\r\n                        name=\"streetaddress\"\r\n                        value={customer.streetaddress}\r\n                        onChange={inputChanged}\r\n                        label=\"streetaddress\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"postcode\"\r\n                        name=\"postcode\"\r\n                        value={customer.postcode}\r\n                        onChange={inputChanged}\r\n                        label=\"postcode\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={customer.city}\r\n                        onChange={inputChanged}\r\n                        label=\"city\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={customer.email}\r\n                        onChange={inputChanged}\r\n                        label=\"email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        value={customer.phone}\r\n                        onChange={inputChanged}\r\n                        label=\"phone\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancel} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default function Editcustomer(props) {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [customer, setCustomer] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        streetaddress: '',\r\n        postcode: '',\r\n        city: '',\r\n        email: '',\r\n        phone: '',\r\n    })\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        console.log(props.customer);\r\n        setCustomer({\r\n            firstname: props.customer.firstname,\r\n            lastname: props.customer.lastname,\r\n            streetaddress: props.customer.streetaddress,\r\n            postcode: props.customer.postcode,\r\n            city: props.customer.city,\r\n            email: props.customer.email,\r\n            phone: props.customer.phone,\r\n        })\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.updateCustomer(props.customer.links[0].href, customer);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n                <EditIcon />\r\n        </IconButton>\r\n{/*         <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n                Edit\r\n        </Button> */}\r\n            <Dialog open={open} disableBackdropClick={true} disableEscapeKeyDown={true} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit existing customer</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"firstname\"\r\n                        name=\"firstname\"\r\n                        value={customer.firstname}\r\n                        onChange={inputChanged}\r\n                        label=\"firstname\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"lastname\"\r\n                        name=\"lastname\"\r\n                        value={customer.lastname}\r\n                        onChange={inputChanged}\r\n                        label=\"lastname\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"streetaddress\"\r\n                        name=\"streetaddress\"\r\n                        value={customer.streetaddress}\r\n                        onChange={inputChanged}\r\n                        label=\"streetaddress\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"postcode\"\r\n                        name=\"postcode\"\r\n                        value={customer.postcode}\r\n                        onChange={inputChanged}\r\n                        label=\"postcode\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={customer.city}\r\n                        onChange={inputChanged}\r\n                        label=\"city\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={customer.email}\r\n                        onChange={inputChanged}\r\n                        label=\"email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        value={customer.phone}\r\n                        onChange={inputChanged}\r\n                        label=\"phone\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancel} color=\"primary\">\r\n                        Cancel\r\n                </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Save\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n// import DateTimePicker from 'react-datetime-picker';\r\n\r\nexport default function AddTrainingForCustomer(props) {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [datetime, setDatetime] = useState();\r\n    const [name, setName] = useState([]);\r\n    const [training, setTraining] = useState({\r\n        date: '',\r\n        duration: '',\r\n        activity: '',\r\n        customer: '',\r\n    })\r\n\r\n    const getCustomersName = () => {\r\n        fetch(props.singleCustomer.links[0].href)\r\n            .then(response => response.json())\r\n            .then(name => setName(name.firstname + \" \" + name.lastname))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        getCustomersName();\r\n        setTraining({ ...training, customer: props.singleCustomer.links[0].href });\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.addTrainingForCustomer(training)\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        console.log(date)\r\n        setDatetime(date)\r\n        setTraining({ ...training, 'date': datetime })\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        console.log(training)\r\n        setTraining({ ...training, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n                New training\r\n        </Button>\r\n            <Dialog open={open} disableBackdropClick={true} disableEscapeKeyDown={true} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add training for {name}</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <Grid container justify=\"space-around\">\r\n                            <KeyboardDatePicker\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                label=\"Date\"\r\n                                format=\"dd.MM.yyyy\"\r\n                                value={props.singleCustomer.date}\r\n                                onChange={value => handleDateChange(value)}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                            <KeyboardTimePicker\r\n                                margin=\"normal\"\r\n                                id=\"time-picker\"\r\n                                label=\"Time\"\r\n                                value={props.singleCustomer.date}\r\n                                onChange={value => handleDateChange(value)}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change time',\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    {/*\r\n                     <DateTimePicker\r\n                        onChange={value => handleDateChange(value)}\r\n                        value={props.singleCustomer.date}\r\n                    />\r\n                    */}\r\n\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"activity\"\r\n                        name=\"activity\"\r\n                        value={props.singleCustomer.activity}\r\n                        onChange={inputChanged}\r\n                        label=\"Activity\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"duration\"\r\n                        name=\"duration\"\r\n                        value={props.singleCustomer.duration}\r\n                        onChange={inputChanged}\r\n                        label=\"Duration\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancel} color=\"primary\">\r\n                        Cancel\r\n                </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Save\r\n                </Button>\r\n                </DialogActions>\r\n\r\n                {/* <DateTimePicker\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        value={props.selectedDate}\r\n                        onchange={inputChanged}\r\n                    /> */}\r\n                {/* <DatePicker selected={selectedDate} onChange={date => setSelectedDate(date)} /> */}\r\n                {/*\r\n                    Päivämäärä tulee syöttää allaolevassa formissa muodossa yyyy-dd-mm,\r\n                    jotta päivämäärä tallentuu oikein. Kellonaika ei tallennu. Date- ja timepicker\r\n                    toimii, mutta ei tallennu tietokantaan. \"Invalid date\"\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        defaultValue=\"YYYY-MM-DD\"\r\n                        value={props.singleCustomer.date}\r\n                        onChange={inputChanged}\r\n                        label=\"Date\"\r\n                        fullWidth\r\n                    />\r\n                    */}\r\n\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Addcustomer from './Addcustomer.js';\r\nimport Editcustomer from './Editcustomer.js';\r\nimport AddTrainingForCustomer from './AddTrainingForCustomer.js';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\nexport default function Customerlist() {\r\n\r\n    const [customers, setCustomers] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        getCustomers()\r\n    }, [])\r\n\r\n    const getCustomers = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers')\r\n            .then(response => response.json())\r\n            .then(data => setCustomers(data.content))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const deleteCustomer = (link) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(link, { method: 'DELETE' })\r\n                .then(_ => getCustomers())\r\n                .then(_ => {\r\n                    setMsg('Customer deleted')\r\n                    setOpen(true)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const addCustomer = (customer) => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers',\r\n            {\r\n                method: 'POST',\r\n                headers:\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(customer)\r\n            })\r\n            .then(_ => getCustomers())\r\n            .then(_ => {\r\n                setMsg('Customer added')\r\n                setOpen(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const updateCustomer = (link, customer) => {\r\n        fetch(link, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customer)\r\n        })\r\n            .then(_ => getCustomers())\r\n            .then(_ => {\r\n                setMsg('Customer updated')\r\n                setOpen(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addTrainingForCustomer = (training) => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(training)\r\n        })\r\n            .then(_ => getCustomers())\r\n            .then(_ => {\r\n                setMsg('Reservation added')\r\n                setOpen(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Firstname',\r\n            accessor: 'firstname'\r\n        },\r\n        {\r\n            Header: 'Lastname',\r\n            accessor: 'lastname'\r\n        },\r\n        {\r\n            Header: 'Street address',\r\n            accessor: 'streetaddress'\r\n        },\r\n        {\r\n            Header: 'Postcode',\r\n            accessor: 'postcode'\r\n        },\r\n        {\r\n            Header: 'City',\r\n            accessor: 'city'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Phone',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            Cell: row => (<AddTrainingForCustomer singleCustomer={row.original} addTrainingForCustomer={addTrainingForCustomer} />)\r\n        },\r\n        {\r\n            Cell: row => (<Editcustomer customer={row.original} updateCustomer={updateCustomer} />)\r\n        },\r\n        {\r\n            Cell: row => (<IconButton aria-label=\"delete\" size=\"small\" color=\"secondary\" onClick={() => deleteCustomer(row.original.links[0].href)}><DeleteIcon /></IconButton>)\r\n        }\r\n    ]\r\n\r\n    return (\r\n        //             Cell: row => (<Button size=\"small\" color=\"secondary\" onClick={() => deleteCustomer(row.original.links[0].href)}>Delete</Button>)\r\n\r\n        <div>\r\n            <Addcustomer\r\n                addCustomer={addCustomer} />\r\n            <ReactTable\r\n                defaultPageSize={10}\r\n                filterable={true}\r\n                data={customers}\r\n                columns={columns} />\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n                message={msg}\r\n                anchorOriginal={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left'\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport moment from 'moment'\r\n\r\nexport default function Traininglist() {\r\n\r\n    const [trainings, setTrainings] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        getTrainings()\r\n    }, [])\r\n\r\n    const getTrainings = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings')\r\n            .then(response => response.json())\r\n            .then(data => setTrainings(data.content))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const deleteTraining = (link) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(link, { method: 'DELETE' })\r\n                .then(_ => getTrainings())\r\n                .then(_ => {\r\n                    setMsg('Training deleted')\r\n                    setOpen(true)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    const columns = [\r\n\r\n        {\r\n            id: 'date',\r\n            Header: 'Date and time',\r\n            accessor: (d) => {\r\n                return (\r\n                    moment(d.date)\r\n                    .local()\r\n                    .format(\"DD.MM.YYYY hh:mm:ss a\")\r\n                )\r\n            }\r\n        },\r\n        {\r\n            Header: 'Duration (minutes)',\r\n            accessor: 'duration'\r\n        },\r\n        {\r\n            Header: 'Activity',\r\n            accessor: 'activity'\r\n        },\r\n        {\r\n            Cell: row => (<Button size=\"small\" color=\"secondary\" onClick={() => deleteTraining(row.original.links[0].href)}>Delete</Button>)\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <ReactTable\r\n                defaultPageSize={10}\r\n                filterable={true}\r\n                data={trainings}\r\n                columns={columns} />\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n                message={msg}\r\n                anchorOriginal={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left'\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport moment from 'moment'\r\n\r\nexport default function BookedTrainings() {\r\n\r\n    const [reservations, setReservations] = useState([])\r\n\r\n    useEffect(() => {\r\n        getReservations()\r\n    }, [])\r\n\r\n    const getReservations = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n            .then(response => response.json())\r\n            .then(data => setReservations(data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            id: 'date',\r\n            Header: 'Date and time',\r\n            accessor: (d) => {\r\n                return (\r\n                    moment(d.date)\r\n                        .local()\r\n                        .format(\"DD.MM.YYYY hh:mm:ss a\")\r\n                )\r\n            }\r\n        },\r\n        {\r\n            Header: 'Duration (minutes)',\r\n            accessor: 'duration'\r\n        },\r\n        {\r\n            Header: 'Activity',\r\n            accessor: 'activity'\r\n        },\r\n        {\r\n            Header: 'Customer id',\r\n            accessor: 'customer.id'\r\n        },\r\n        {\r\n            Header: 'Firstname',\r\n            accessor: 'customer.firstname'\r\n        },\r\n        {\r\n            Header: 'Lastname',\r\n            accessor: 'customer.lastname'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <ReactTable\r\n                defaultPageSize={10}\r\n                filterable={true}\r\n                data={reservations}\r\n                columns={columns} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: 500,\r\n        height: 1000,\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n}));\r\n\r\nexport default function GridListi() {\r\n\r\n    const classes = useStyles();\r\n    const [listItems, setListItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://reqres.in/api/users')\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                setListItems(responseData.data)\r\n            })\r\n            .catch(err => console.error(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={180} className={classes.gridList}>\r\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                    <ListSubheader component=\"div\"> </ListSubheader>\r\n                </GridListTile>\r\n                {listItems.map((person) => (\r\n                    <GridListTile key={person.id}>\r\n                        <img src={person.avatar} alt=\"coach\"/>\r\n                        <GridListTileBar\r\n                            title={<span>{person.first_name} {person.last_name} </span>}\r\n                            subtitle={person.email}\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport default function Trainer() {\r\n\r\n  const [listItems, setListItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://reqres.in/api/users')\r\n      .then(response => response.json())\r\n      .then(responseData => {\r\n        setListItems(responseData.data)\r\n      })\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n\r\n  const itemRows = listItems.map((person) =>\r\n    <tr key={person.id}>\r\n      <td>{person.first_name} {person.last_name}</td>\r\n      <td>{person.email}</td>\r\n      <td><img src={person.avatar}  alt=\"coach\" /></td>\r\n    </tr>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2>Personal trainers</h2>\r\n      <Table responsive=\"lg\">\r\n        <thead>\r\n          <tr>\r\n            <th>Coach</th>\r\n            <th>Email</th>\r\n            <th> </th>\r\n          </tr>\r\n          {itemRows}\r\n        </thead>\r\n      </Table>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Customerlist from \"./components/Customerlist\";\nimport Traininglist from \"./components/Traininglist\";\nimport Reservations from \"./components/Reservations\"\nimport GridListi from \"./components/Gridlist\"\nimport Coachlist from \"./components/Coachlist\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/Customers\" component={Customerlist}>\n            <Customerlist />\n          </Route>\n          <Route path=\"/Trainings\" component={Traininglist}>\n            <Traininglist />\n          </Route>\n          <Route path=\"/Reservations\" component={Reservations}>\n            <Reservations />\n          </Route>\n          <Route path=\"/Coachgrid\" component={GridListi}>\n            <GridListi />\n          </Route>\n          <Route path=\"/Coachlist\" component={Coachlist}>\n            <Coachlist />\n          </Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}